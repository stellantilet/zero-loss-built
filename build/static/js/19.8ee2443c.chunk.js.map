{"version":3,"sources":["components/ProfileAvatarWithTeam.tsx","views/Home/components/ColoredWordHeading.tsx","views/Home/components/SlideSvg.tsx","views/Home/components/CompositeImage.tsx","views/Home/hooks/useGetTopFarmsByApr.tsx","views/Home/components/Hero.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/GradientLogoSvg.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/components/SalesSection/index.tsx","views/Home/components/WinSection/PredictionCardContent.tsx","views/Home/components/WinSection/LotteryCardContent.tsx","views/Home/components/WinSection/index.tsx","views/Home/hooks/useGetTopPoolsByApr.tsx","views/Home/components/FarmsPoolsRow/TopFarmPool.tsx","views/Home/components/FarmsPoolsRow/RowHeading.tsx","views/Home/components/FarmsPoolsRow/index.tsx","views/Home/components/SunburstSvg.tsx","views/Home/components/Footer.tsx","views/Home/components/CakeDataRow.tsx","views/Home/components/WedgeSvgs.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/UserBanner/HarvestCard.tsx","views/Home/components/UserBanner/EarningsText.tsx","views/Home/components/UserBanner/UserDetail.tsx","views/Home/components/UserBanner/index.tsx","views/Home/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["TeamAvatar","styled","img","theme","card","background","mediaQueries","sm","AvatarWrapper","div","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatarWithTeam","profile","nft","image","thumbnail","isActive","src","team","images","alt","name","ColoredWordHeading","text","firstColor","mb","props","useTheme","split","firstWord","remainingWords","slice","join","displayedColor","colors","secondary","scale","style","color","SlideSvgLight","viewBox","d","fill","id","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","SlideSvgDark","Resolution","floatingAnim","x","y","keyframes","Wrapper","Box","maxHeight","DummyImg","ImageWrapper","FetchStatus","getImageUrl","base","imageSrc","resolution","extension","getSrcSet","undefined","MD","LG","CompositeImage","path","attributes","type","srcSet","map","fading","BgWrapper","InnerWrapper","BunnyWrapper","StarsWrapper","imagePath","starsImage","Hero","t","useTranslation","account","useWeb3React","isDark","SlideSvg","width","position","flexDirection","alignItems","justifyContent","mt","flex","ConnectWalletButton","mr","to","variant","height","swapSectionData","headingText","bodyText","reverse","primaryButton","external","secondaryButton","earnSectionData","cakeSectionData","StyledCard","Card","md","rotation","IconWrapper","IconCard","icon","borderColor","children","borderBackground","StatCardContent","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","lastWord","pop","length","minHeight","minWidth","GradientLogo","fillRule","clipRule","Stats","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","tvlString","formatLocalisedCompactNumber","tvl","trades","users","entrusting","inFunds","UsersCardData","TradesCardData","StakedCardData","textAlign","flexWrap","display","bold","primary","failure","SalesSection","headingTranslatedText","bodyTranslatedText","ml","alignSelf","href","fontSize","StyledLink","Link","PredictionCardContent","slowRefresh","useRefresh","useIntersectionObserver","observerRef","isIntersecting","loadData","setLoadData","bnbBusdPrice","useBNBBusdPrice","bnbWon","setBnbWon","bnbWonInUsd","multiplyPriceByAmount","localisedBnbUsdString","pretext","wonSoFar","getTotalWon","totalWon","fetchMarketData","my","ref","StyledBalance","Balance","gradients","gold","LotteryCardContent","lotteryId","setLotteryId","currentLotteryPrize","setCurrentLotteryPrize","cakePriceBusdAsString","usePriceCakeBusd","toString","cakePrizeInUsd","prizesThisRound","cakePriceBusd","useMemo","BigNumber","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","fetchCurrentID","fetchLottery","amountCollectedInCake","prizeInBusd","times","fetchCurrentLotteryPrize","gt","prefix","decimals","value","getBalanceAmount","toNumber","TransparentFrame","cardBorder","BottomLeftImgWrapper","Flex","TopRightImgWrapper","PredictionCardData","LotteryCardData","bottomLeftImage","topRightImage","WinSection","m","maxWidth","useGetTopFarmsByApr","dispatch","useAppDispatch","farms","useFarms","NOT_FETCHED","fetchStatus","setFetchStatus","topFarms","setTopFarms","fetchFarmData","FETCHING","activeFarms","nonArchivedFarms","filter","farm","pid","fetchFarmsPublicDataAsync","SUCCESS","FAILED","farmsState","farmsWithApr","lpTotalInQuoteToken","quoteTokenPriceBusd","multiplier","totalLiquidity","getFarmApr","poolWeight","lpAddresses","ChainId","MAINNET","cakeRewardsApr","lpRewardsApr","apr","sortedByApr","orderBy","getTopFarmsByApr","useGetTopPoolsByApr","poolsWithoutAutoVault","usePools","pools","performanceFee","useCakeVault","fees","performanceFeeAsDecimal","topPools","setTopPools","cakePool","pool","isFinished","find","sousId","cakeAutoVault","isAutoVault","getAprData","fetchPoolsPublicData","simpleRpcProvider","getBlockNumber","blockNumber","fetchCakeVaultFees","fetchPoolsPublicDataAsync","activePools","getTopPoolsByApr","StyledWrapper","AbsoluteWrapper","topOffset","visible","index","inputSecondary","TopFarmPool","title","percentage","lineHeight","unit","RowHeading","Grid","FarmsPoolsRow","showFarms","setShowFarms","timer","useRef","isLoaded","startTimer","useCallback","current","setInterval","prev","clearInterval","onClick","topFarm","lpSymbol","topPool","earningSymbol","earningToken","symbol","stakingSymbol","stakingToken","SunburstSvg","fillOpacity","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","cx","cy","r","gradientTransform","StyledSunburst","xl","FloatingPancakesWrapper","Container","TopLeftImgWrapper","BottomRightImgWrapper","topLeftImage","bottomRightImage","Footer","StyledColumn","noMobileBorder","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","tokens","cake","address","cakeSupply","mcap","mcapString","marketCap","cakeEmissions","OuterWedgeWrapper","InnerWedgeWrapper","top","WedgeTopLeft","preserveAspectRatio","WedgeTopRight","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","calls","farmsConfig","getMasterChefAddress","params","multicall","masterChefABI","rawResults","results","balance","farmsWithBalances","balanceType","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","fetchBalances","HarvestCard","pendingTx","setPendingTx","useToast","toastSuccess","toastError","farmEarningsSum","masterChefContract","useMasterchef","earningsBusd","multipliedBy","numTotalToCollect","numFarmsToCollect","hasCakePoolToCollect","count","earningsText","getEarningsText","preText","toCollectText","harvestAllFarms","farmWithBalance","harvestFarm","isNaN","isLoading","endIcon","spin","disabled","Desktop","Mobile","Sticker","invertedContrast","radii","circle","boxShadow","StyledNoProfileAvatarIcon","UserDetail","useProfile","truncatedAddress","truncateHash","userName","username","UserBanner","p","StyledHeroSection","PageSection","UserBannerWrapper","lg","Home","HomeSectionContainerStyles","margin","Page","innerProps","hasCurvedDivider","MetricsSection","cardHeader","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","svgFill","concaveDivider","containerProps"],"mappings":"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","file":"static/js/19.8ee2443c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={profile.nft?.image.thumbnail}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatarWithTeam\r\n","import React from 'react'\r\nimport { Colors, Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n  firstColor?: keyof Colors\r\n}\r\n\r\nconst ColoredWordHeading: React.FC<HeadingProps> = ({ text, firstColor, mb = '24px', ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n  const displayedColor = (theme.colors[firstColor] as string) ?? theme.colors.secondary\r\n\r\n  return (\r\n    <Heading scale=\"xl\" mb={mb} {...props}>\r\n      <span style={{ color: displayedColor }}>{firstWord} </span>\r\n      {remainingWords}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default ColoredWordHeading\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const SlideSvgLight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 167.023C520.5 167.023 267.5 290.522 0 304.5V339H1660V0.5C1358.83 0.5 1104 167.023 804 167.023Z\"\r\n        fill=\"url(#paint0_linear_light)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_light\" x1=\"830\" y1=\"84\" x2=\"830\" y2=\"339\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"white\" stopOpacity=\"0.48\" />\r\n          <stop offset=\"0.566389\" stopColor=\"white\" stopOpacity=\"0.35\" />\r\n          <stop offset=\"1\" stopColor=\"white\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const SlideSvgDark: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 166.523C520.5 166.523 267.5 290.022 0 304V338.5H1660V0C1358.83 0 1104 166.523 804 166.523Z\"\r\n        fill=\"url(#paint0_linear_dark)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_dark\" x1=\"830\" y1=\"83.5\" x2=\"830\" y2=\"338.5\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"#08060B\" stopOpacity=\"0.2\" />\r\n          <stop offset=\"0.545554\" stopColor=\"#08060B\" stopOpacity=\"0.5\" />\r\n          <stop offset=\"1\" stopColor=\"#08060B\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }\r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution, extension = '.png'): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}${extension}` : extension}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string, extension = '.png') => {\r\n  return `${getImageUrl(base, imageSrc, undefined, extension)} 512w,\r\n  ${getImageUrl(base, imageSrc, Resolution.MD, extension)} 768w,\r\n  ${getImageUrl(base, imageSrc, Resolution.LG, extension)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      <picture>\r\n        <source type=\"image/webp\" srcSet={getSrcSet(path, attributes[0].src, '.webp')} />\r\n        <source type=\"image/png\" srcSet={getSrcSet(path, attributes[0].src)} />\r\n        <DummyImg src={getImageUrl(path, attributes[0].src)} maxHeight={maxHeight} />\r\n      </picture>\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <picture>\r\n            <source type=\"image/webp\" srcSet={getSrcSet(path, image.src, '.webp')} />\r\n            <source type=\"image/png\" srcSet={getSrcSet(path, image.src)} />\r\n            <img src={getImageUrl(path, image.src)} alt={image.alt} />\r\n          </picture>\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import { useState, useEffect } from 'react'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { DeserializedFarm } from 'state/types'\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nenum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  FETCHING = 'fetching',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useGetTopFarmsByApr = (isIntersecting: boolean) => {\r\n  const dispatch = useAppDispatch()\r\n  const { data: farms } = useFarms()\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [topFarms, setTopFarms] = useState<FarmWithStakedValue[]>([null, null, null, null, null])\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  useEffect(() => {\r\n    const fetchFarmData = async () => {\r\n      setFetchStatus(FetchStatus.FETCHING)\r\n      const activeFarms = nonArchivedFarms.filter((farm) => farm.pid !== 0)\r\n      try {\r\n        await dispatch(fetchFarmsPublicDataAsync(activeFarms.map((farm) => farm.pid)))\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch (e) {\r\n        console.error(e)\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (isIntersecting && fetchStatus === FetchStatus.NOT_FETCHED) {\r\n      fetchFarmData()\r\n    }\r\n  }, [dispatch, setFetchStatus, fetchStatus, topFarms, isIntersecting])\r\n\r\n  useEffect(() => {\r\n    const getTopFarmsByApr = (farmsState: DeserializedFarm[]) => {\r\n      const farmsWithPrices = farmsState.filter(\r\n        (farm) =>\r\n          farm.lpTotalInQuoteToken &&\r\n          farm.quoteTokenPriceBusd &&\r\n          farm.pid !== 0 &&\r\n          farm.multiplier &&\r\n          farm.multiplier !== '0X',\r\n      )\r\n      const farmsWithApr: FarmWithStakedValue[] = farmsWithPrices.map((farm) => {\r\n        const totalLiquidity = farm.lpTotalInQuoteToken.times(farm.quoteTokenPriceBusd)\r\n        const { cakeRewardsApr, lpRewardsApr } = getFarmApr(\r\n          farm.poolWeight,\r\n          cakePriceBusd,\r\n          totalLiquidity,\r\n          farm.lpAddresses[ChainId.MAINNET],\r\n            new BigNumber(0)\r\n        )\r\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr }\r\n      })\r\n\r\n      const sortedByApr = orderBy(farmsWithApr, (farm) => farm.apr + farm.lpRewardsApr, 'desc')\r\n      setTopFarms(sortedByApr.slice(0, 5))\r\n    }\r\n\r\n    if (fetchStatus === FetchStatus.SUCCESS && !topFarms[0]) {\r\n      getTopFarmsByApr(farms)\r\n    }\r\n  }, [setTopFarms, farms, fetchStatus, cakePriceBusd, topFarms])\r\n\r\n  return { topFarms }\r\n}\r\n\r\nexport default useGetTopFarmsByApr\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Flex, Heading, Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { SlideSvgDark, SlideSvgLight } from './SlideSvg'\r\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\r\n\r\nconst flyingAnim = () => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(-5px, -5px);\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }\r\n`\r\n\r\nconst fading = () => keyframes`\r\n  from {\r\n    opacity: 0.9;\r\n  }\r\n  50% {\r\n    opacity: 0.1;\r\n  }\r\n  to {\r\n    opacity: 0.9;\r\n  }\r\n`\r\n\r\nconst BgWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: -3px;\r\n`\r\n\r\nconst BunnyWrapper = styled.div`\r\n  width: 100%;\r\n  animation: ${flyingAnim} 3.5s ease-in-out infinite;\r\n`\r\n\r\nconst StarsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  & :nth-child(2) {\r\n    animation: ${fading} 2s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${fading} 5s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${fading} 2.5s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n`\r\n\r\nconst imagePath = '/images/home/lunar-bunny/'\r\nconst imageSrc = 'bunny'\r\n\r\nconst starsImage: CompositeImageProps = {\r\n  path: '/images/home/lunar-bunny/',\r\n  attributes: [\r\n    { src: 'star-l', alt: '3D Star' },\r\n    { src: 'star-r', alt: '3D Star' },\r\n    { src: 'star-top-r', alt: '3D Star' },\r\n  ],\r\n}\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <InnerWrapper>{theme.isDark ? <SlideSvgDark width=\"100%\" /> : <SlideSvgLight width=\"100%\" />}</InnerWrapper>\r\n      </BgWrapper>\r\n      <Flex\r\n        position=\"relative\"\r\n        flexDirection={['column-reverse', null, null, 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n        mt={[account ? '280px' : '50px', null, 0]}\r\n        id=\"homepage-hero\"\r\n      >\r\n        <Flex flex=\"1\" flexDirection=\"column\">\r\n          <Heading scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            {t('The moon is made of pancakes.')}\r\n          </Heading>\r\n          <Heading scale=\"md\" mb=\"24px\">\r\n            {t('Trade, earn, and win crypto on the most popular decentralized platform in the galaxy.')}\r\n          </Heading>\r\n          <Flex>\r\n            {!account && <ConnectWalletButton mr=\"8px\" />}\r\n            <Link to=\"/swap\">\r\n              <Button variant={!account ? 'secondary' : 'primary'}>{t('Trade Now')}</Button>\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n          position=\"relative\"\r\n        >\r\n          <BunnyWrapper>\r\n            <picture>\r\n              <source type=\"image/webp\" srcSet={getSrcSet(imagePath, imageSrc, '.webp')} />\r\n              <source type=\"image/png\" srcSet={getSrcSet(imagePath, imageSrc)} />\r\n              <img src={`${imagePath}${imageSrc}.png`} alt={t('Lunar bunny')} />\r\n            </picture>\r\n          </BunnyWrapper>\r\n          <StarsWrapper>\r\n            <CompositeImage {...starsImage} />\r\n          </StarsWrapper>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  headingText: 'Trade anything. No registration, no hassle.',\r\n  bodyText: 'Trade any token on Binance Smart Chain in seconds, just by connecting your wallet.',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'Trade Now',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      { src: 'BNB', alt: 'BNB token' },\r\n      { src: 'BTC', alt: 'BTC token' },\r\n      { src: 'CAKE', alt: 'CAKE token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'Earn passive income with crypto.',\r\n  bodyText: 'PancakeSwap makes it easy to make your crypto work for you.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'Explore',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/products/yield-farming',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n      { src: 'pie', alt: 'Pie chart' },\r\n      { src: 'stonks', alt: 'Stocks chart' },\r\n      { src: 'folder', alt: 'Folder with cake token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'CAKE makes our world go round.',\r\n  bodyText:\r\n    'CAKE token is at the heart of the PancakeSwap ecosystem. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap?outputCurrency=0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    text: 'Buy CAKE',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/tokenomics/cake',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n      { src: 'bottom-right', alt: 'Small 3d pancake' },\r\n      { src: 'top-right', alt: 'Small 3d pancake' },\r\n      { src: 'coin', alt: 'CAKE token' },\r\n      { src: 'top-left', alt: 'Small 3d pancake' },\r\n    ],\r\n  },\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\r\n\r\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\r\n  height: fit-content;\r\n  padding: 1px 1px 4px 1px;\r\n  box-sizing: border-box;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\ninterface IconCardProps extends IconCardData, CardProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport interface IconCardData {\r\n  icon: ReactNode\r\n  background?: string\r\n  borderColor?: string\r\n  rotation?: string\r\n}\r\n\r\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, children, ...props }) => {\r\n  return (\r\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\r\n      <CardBody>\r\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\r\n        {children}\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IconCard\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\n\r\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\r\n  headingText,\r\n  bodyText,\r\n  highlightColor,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints()\r\n  const isSmallerScreen = isMobile || isTablet\r\n  const split = headingText.split(' ')\r\n  const lastWord = split.pop()\r\n  const remainingWords = split.slice(0, split.length).join(' ')\r\n\r\n  return (\r\n    <Flex\r\n      minHeight={[null, null, null, '168px']}\r\n      minWidth=\"232px\"\r\n      width=\"fit-content\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-end\"\r\n      mt={[null, null, null, '64px']}\r\n    >\r\n      {isSmallerScreen && remainingWords.length > 13 ? (\r\n        <Heading scale=\"lg\">{remainingWords}</Heading>\r\n      ) : (\r\n        <Heading scale=\"xl\">{remainingWords}</Heading>\r\n      )}\r\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\r\n        {lastWord}\r\n      </Heading>\r\n      <Text color=\"textSubtle\">{bodyText}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StatCardContent\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst GradientLogo: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 48 48\" {...props}>\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M14.9024 0C10.8947 0 7.87179 3.60289 8.60749 7.50271L10.3484 16.7306C4.45101 19.3061 0 23.7533 0 29.3333V32.7273C0 37.3405 3.08306 41.2029 7.39317 43.8102C11.7369 46.4379 17.6132 48 24 48C30.3868 48 36.2631 46.4379 40.6068 43.8102C44.9169 41.2029 48 37.3405 48 32.7273V29.3333C48 23.7236 43.5028 19.2593 37.5552 16.6889L39.2882 7.50271C40.0239 3.6029 37.001 0 32.9933 0C29.4567 0 26.5896 2.83809 26.5896 6.33904V14.147C25.7386 14.0899 24.8746 14.0606 24 14.0606C23.0897 14.0606 22.1908 14.0923 21.3061 14.1541V6.33904C21.3061 2.83809 18.4391 0 14.9024 0ZM17.8776 28.3637C17.8776 30.372 16.7811 32 15.4286 32C14.0761 32 12.9796 30.372 12.9796 28.3637C12.9796 26.3554 14.0761 24.7273 15.4286 24.7273C16.7811 24.7273 17.8776 26.3554 17.8776 28.3637ZM34.7757 28.3637C34.7757 30.372 33.6792 32 32.3267 32C30.9742 32 29.8777 30.372 29.8777 28.3637C29.8777 26.3554 30.9742 24.7273 32.3267 24.7273C33.6792 24.7273 34.7757 26.3554 34.7757 28.3637Z\"\r\n        fill=\"url(#paint0_linear)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear\" x1=\"24\" y1=\"0\" x2=\"24\" y2=\"48\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"#7645D9\" />\r\n          <stop offset=\"1\" stopColor=\"#5121B1\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default GradientLogo\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport StatCardContent from './StatCardContent'\r\nimport GradientLogo from '../GradientLogoSvg'\r\n\r\n// Values fetched from bitQuery effective 6/9/21\r\nconst txCount = 30841921\r\nconst addressCount = 2751624\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const data = useGetStats()\r\n  const { theme } = useTheme()\r\n\r\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\r\n  const trades = formatLocalisedCompactNumber(txCount)\r\n  const users = formatLocalisedCompactNumber(addressCount)\r\n\r\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\r\n  const [entrusting, inFunds] = tvlText.split(tvlString)\r\n\r\n  const UsersCardData: IconCardData = {\r\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n\r\n  const TradesCardData: IconCardData = {\r\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n\r\n  const StakedCardData: IconCardData = {\r\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <GradientLogo height=\"48px\" width=\"48px\" mb=\"24px\" />\r\n      <Heading textAlign=\"center\" scale=\"xl\">\r\n        {t('Used by millions.')}\r\n      </Heading>\r\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"32px\">\r\n        {t('Trusted with billions.')}\r\n      </Heading>\r\n      <Text textAlign=\"center\" color=\"textSubtle\">\r\n        {t('PancakeSwap has the most users of any decentralized platform, ever.')}\r\n      </Text>\r\n      <Flex flexWrap=\"wrap\">\r\n        <Text display=\"inline\" textAlign=\"center\" color=\"textSubtle\" mb=\"20px\">\r\n          {entrusting}\r\n          <>{data ? <>{tvlString}</> : <Skeleton display=\"inline-block\" height={16} width={70} mt=\"2px\" />}</>\r\n          {inFunds}\r\n        </Text>\r\n      </Flex>\r\n\r\n      <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\r\n        {t('Will you join them?')}\r\n      </Text>\r\n\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('%users% users', { users })}\r\n            bodyText={t('in the last 30 days')}\r\n            highlightColor={theme.colors.secondary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('%trades% trades', { trades })}\r\n            bodyText={t('made in the last 30 days')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...StakedCardData}>\r\n          <StatCardContent\r\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\r\n            bodyText={t('Total Value Locked')}\r\n            highlightColor={theme.colors.failure}\r\n          />\r\n        </IconCard>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  id: string\n  chain: string\n  name: string\n  site_url: string\n  logo_url: string\n  has_supported_portfolio: boolean\n  tvl: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport ColoredWordHeading from '../ColoredWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <ColoredWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">\r\n            {bodyTranslatedText}\r\n          </Text>\r\n          <Flex>\r\n            <Button mr=\"16px\">\r\n              {primaryButton.external ? (\r\n                <Link external href={primaryButton.to}>\r\n                  <Text color=\"card\" bold fontSize=\"16px\">\r\n                    {t(primaryButton.text)}\r\n                  </Text>\r\n                </Link>\r\n              ) : (\r\n                <RouterLink to={primaryButton.to}>\r\n                  <Text color=\"card\" bold fontSize=\"16px\">\r\n                    {t(primaryButton.text)}\r\n                  </Text>\r\n                </RouterLink>\r\n              )}\r\n            </Button>\r\n            {secondaryButton.external ? (\r\n              <Link external href={secondaryButton.to}>\r\n                {t(secondaryButton.text)}\r\n              </Link>\r\n            ) : (\r\n              <RouterLink to={secondaryButton.to}>{t(secondaryButton.text)}</RouterLink>\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Skeleton, Button, ArrowForwardIcon, Heading } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport { getTotalWon } from 'state/predictions/helpers'\r\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\r\nimport { multiplyPriceByAmount } from 'utils/prices'\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst PredictionCardContent = () => {\r\n  const { t } = useTranslation()\r\n  const { slowRefresh } = useRefresh()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const [loadData, setLoadData] = useState(false)\r\n  const bnbBusdPrice = useBNBBusdPrice()\r\n  const [bnbWon, setBnbWon] = useState(0)\r\n  const bnbWonInUsd = multiplyPriceByAmount(bnbBusdPrice, bnbWon)\r\n\r\n  const localisedBnbUsdString = formatLocalisedCompactNumber(bnbWonInUsd)\r\n  const bnbWonText = t('$%bnbWonInUsd% in BNB won so far', { bnbWonInUsd: localisedBnbUsdString })\r\n  const [pretext, wonSoFar] = bnbWonText.split(localisedBnbUsdString)\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setLoadData(true)\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  useEffect(() => {\r\n    const fetchMarketData = async () => {\r\n      const totalWon = await getTotalWon()\r\n      setBnbWon(totalWon)\r\n    }\r\n\r\n    if (loadData) {\r\n      fetchMarketData()\r\n    }\r\n  }, [slowRefresh, loadData])\r\n\r\n  return (\r\n    <>\r\n      <Flex flexDirection=\"column\" mt=\"48px\">\r\n        <Text color=\"#280D5F\" bold fontSize=\"16px\">\r\n          {t('Prediction')}\r\n        </Text>\r\n        {bnbWonInUsd ? (\r\n          <Heading color=\"#280D5F\" my=\"8px\" scale=\"xl\" bold>\r\n            {pretext}\r\n            {localisedBnbUsdString}\r\n          </Heading>\r\n        ) : (\r\n          <>\r\n            <Skeleton width={230} height={40} my=\"8px\" />\r\n            <div ref={observerRef} />\r\n          </>\r\n        )}\r\n        <Text color=\"#280D5F\" mb=\"24px\" bold fontSize=\"16px\">\r\n          {wonSoFar}\r\n        </Text>\r\n        <Text color=\"#280D5F\" mb=\"40px\">\r\n          {t('Will BNB price rise or fall? guess correctly to win!')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n        <StyledLink to=\"/prediction\" id=\"homepage-prediction-cta\">\r\n          <Button width=\"100%\">\r\n            <Text bold color=\"invertedContrast\">\r\n              {t('Play')}\r\n            </Text>\r\n            <ArrowForwardIcon ml=\"4px\" color=\"invertedContrast\" />\r\n          </Button>\r\n        </StyledLink>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PredictionCardContent\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Flex, Text, Skeleton, Button, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Balance from 'components/Balance'\r\nimport styled from 'styled-components'\r\nimport { fetchCurrentLotteryIdAndMaxBuy, fetchLottery } from 'state/lottery/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StyledBalance = styled(Balance)`\r\n  background: ${({ theme }) => theme.colors.gradients.gold};\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`\r\n\r\nconst LotteryCardContent = () => {\r\n  const { t } = useTranslation()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const [loadData, setLoadData] = useState(false)\r\n  const { slowRefresh } = useRefresh()\r\n  const [lotteryId, setLotteryId] = useState<string>(null)\r\n  const [currentLotteryPrize, setCurrentLotteryPrize] = useState<BigNumber>(null)\r\n  const cakePriceBusdAsString = usePriceCakeBusd().toString()\r\n\r\n  const cakePrizesText = t('%cakePrizeInUsd% in CAKE prizes this round', { cakePrizeInUsd: cakePriceBusdAsString })\r\n  const [pretext, prizesThisRound] = cakePrizesText.split(cakePriceBusdAsString)\r\n\r\n  const cakePriceBusd = useMemo(() => {\r\n    return new BigNumber(cakePriceBusdAsString)\r\n  }, [cakePriceBusdAsString])\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setLoadData(true)\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  useEffect(() => {\r\n    // get current lottery ID\r\n    const fetchCurrentID = async () => {\r\n      const { currentLotteryId } = await fetchCurrentLotteryIdAndMaxBuy()\r\n      setLotteryId(currentLotteryId)\r\n    }\r\n\r\n    if (loadData) {\r\n      fetchCurrentID()\r\n    }\r\n  }, [loadData, setLotteryId])\r\n\r\n  useEffect(() => {\r\n    // get public data for current lottery\r\n    const fetchCurrentLotteryPrize = async () => {\r\n      const { amountCollectedInCake } = await fetchLottery(lotteryId)\r\n      const prizeInBusd = cakePriceBusd.times(amountCollectedInCake)\r\n      setCurrentLotteryPrize(prizeInBusd)\r\n    }\r\n\r\n    if (lotteryId) {\r\n      fetchCurrentLotteryPrize()\r\n    }\r\n  }, [lotteryId, slowRefresh, setCurrentLotteryPrize, cakePriceBusd])\r\n\r\n  return (\r\n    <>\r\n      <Flex flexDirection=\"column\" mt=\"48px\">\r\n        <Text color=\"white\" bold fontSize=\"16px\">\r\n          {t('Lottery')}\r\n        </Text>\r\n        {pretext && (\r\n          <Text color=\"white\" mt=\"12px\" bold fontSize=\"16px\">\r\n            {pretext}\r\n          </Text>\r\n        )}\r\n        {currentLotteryPrize && currentLotteryPrize.gt(0) ? (\r\n          <StyledBalance\r\n            fontSize=\"40px\"\r\n            bold\r\n            prefix=\"$\"\r\n            decimals={0}\r\n            value={getBalanceAmount(currentLotteryPrize).toNumber()}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Skeleton width={200} height={40} my=\"8px\" />\r\n            <div ref={observerRef} />\r\n          </>\r\n        )}\r\n        <Text color=\"white\" mb=\"24px\" bold fontSize=\"16px\">\r\n          {prizesThisRound}\r\n        </Text>\r\n        <Text color=\"white\" mb=\"40px\">\r\n          {t('Buy tickets with CAKE, win CAKE if your numbers match')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n        <StyledLink to=\"/lottery\" id=\"homepage-prediction-cta\">\r\n          <Button width=\"100%\">\r\n            <Text bold color=\"invertedContrast\">\r\n              {t('Buy Tickets')}\r\n            </Text>\r\n            <ArrowForwardIcon ml=\"4px\" color=\"invertedContrast\" />\r\n          </Button>\r\n        </StyledLink>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LotteryCardContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, TicketFillIcon, PredictionsIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport ColoredWordHeading from '../ColoredWordHeading'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport PredictionCardContent from './PredictionCardContent'\r\nimport LotteryCardContent from './LotteryCardContent'\r\nimport CompositeImage from '../CompositeImage'\r\n\r\nconst TransparentFrame = styled.div<{ isDark: boolean }>`\r\n  background: ${({ theme }) => (theme.isDark ? 'rgba(8, 6, 11, 0.6)' : ' rgba(255, 255, 255, 0.6)')};\r\n  padding: 16px;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  box-sizing: border-box;\r\n  backdrop-filter: blur(12px);\r\n  border-radius: 72px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 40px;\r\n  }\r\n`\r\n\r\nconst BgWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst BottomLeftImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: -64px;\r\n  max-width: 192px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    max-width: 100%;\r\n  }\r\n`\r\n\r\nconst TopRightImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: -64px;\r\n\r\n  max-width: 192px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    max-width: 100%;\r\n  }\r\n`\r\n\r\nconst PredictionCardData: IconCardData = {\r\n  icon: <PredictionsIcon width=\"36px\" color=\"inverseContrast\" />,\r\n  background: 'linear-gradient(180deg, #ffb237 0%, #ffcd51 51.17%, #ffe76a 100%);',\r\n  borderColor: '#ffb237',\r\n  rotation: '-2.36deg',\r\n}\r\n\r\nconst LotteryCardData: IconCardData = {\r\n  icon: <TicketFillIcon color=\"white\" width=\"36px\" />,\r\n  background: ' linear-gradient(180deg, #7645D9 0%, #5121B1 100%);',\r\n  borderColor: '#3C1786',\r\n  rotation: '1.43deg',\r\n}\r\n\r\nconst bottomLeftImage = {\r\n  path: '/images/home/prediction-cards/',\r\n  attributes: [\r\n    { src: 'bottom-left', alt: 'CAKE card' },\r\n    { src: 'green', alt: 'Green CAKE card with up arrow' },\r\n    { src: 'red', alt: 'Red Cake card with down arrow' },\r\n    { src: 'top-right', alt: 'CAKE card' },\r\n  ],\r\n}\r\n\r\nconst topRightImage = {\r\n  path: '/images/home/lottery-balls/',\r\n  attributes: [\r\n    { src: '2', alt: 'Lottery ball number 2' },\r\n    { src: '4', alt: 'Lottery ball number 4' },\r\n    { src: '6', alt: 'Lottery ball number 6' },\r\n    { src: '7', alt: 'Lottery ball number 7' },\r\n    { src: '9', alt: 'Lottery ball number 9' },\r\n  ],\r\n}\r\n\r\nconst WinSection = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <BottomLeftImgWrapper>\r\n          <CompositeImage {...bottomLeftImage} />\r\n        </BottomLeftImgWrapper>\r\n        <TopRightImgWrapper>\r\n          <CompositeImage {...topRightImage} />\r\n        </TopRightImgWrapper>\r\n      </BgWrapper>\r\n      <TransparentFrame isDark={theme.isDark}>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n          <ColoredWordHeading textAlign=\"center\" text={t('Win millions in prizes')} />\r\n          <Text color=\"textSubtle\">{t('Provably fair, on-chain games.')}</Text>\r\n          <Text mb=\"40px\" color=\"textSubtle\">\r\n            {t('Win big with PancakeSwap.')}\r\n          </Text>\r\n          <Flex m=\"0 auto\" flexDirection={['column', null, null, 'row']} maxWidth=\"600px\">\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData}>\r\n                <PredictionCardContent />\r\n              </IconCard>\r\n            </Flex>\r\n            <Flex flex=\"1\" maxWidth={['275px', null, null, '100%']}>\r\n              <IconCard {...LotteryCardData}>\r\n                <LotteryCardContent />\r\n              </IconCard>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </TransparentFrame>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WinSection\r\n","import { useState, useEffect, useMemo } from 'react'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useAppDispatch } from 'state'\r\nimport { orderBy } from 'lodash'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { fetchCakeVaultFees, fetchPoolsPublicDataAsync } from 'state/pools'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { useCakeVault, usePools } from 'state/pools/hooks'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\nenum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  FETCHING = 'fetching',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useGetTopPoolsByApr = (isIntersecting: boolean) => {\r\n  const dispatch = useAppDispatch()\r\n  const { pools: poolsWithoutAutoVault } = usePools()\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [topPools, setTopPools] = useState<DeserializedPool[]>([null, null, null, null, null])\r\n\r\n  const pools = useMemo(() => {\r\n    const activePools = poolsWithoutAutoVault.filter((pool) => !pool.isFinished)\r\n    const cakePool = activePools.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    const cakeAutoVaultWithApr = { ...cakeAutoVault, apr: getAprData(cakeAutoVault, performanceFeeAsDecimal).apr }\r\n    return [cakeAutoVaultWithApr, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault, performanceFeeAsDecimal])\r\n\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      setFetchStatus(FetchStatus.FETCHING)\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n\r\n      try {\r\n        await dispatch(fetchCakeVaultFees())\r\n        await dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch (e) {\r\n        console.error(e)\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (isIntersecting && fetchStatus === FetchStatus.NOT_FETCHED) {\r\n      fetchPoolsPublicData()\r\n    }\r\n  }, [dispatch, setFetchStatus, fetchStatus, topPools, isIntersecting])\r\n\r\n  useEffect(() => {\r\n    const getTopPoolsByApr = (activePools: DeserializedPool[]) => {\r\n      const sortedByApr = orderBy(activePools, (pool: DeserializedPool) => pool.apr || 0, 'desc')\r\n      setTopPools(sortedByApr.slice(0, 5))\r\n    }\r\n    if (fetchStatus === FetchStatus.SUCCESS && !topPools[0]) {\r\n      getTopPoolsByApr(pools)\r\n    }\r\n  }, [setTopPools, pools, fetchStatus, cakePriceBusd, topPools, performanceFeeAsDecimal])\r\n\r\n  return { topPools }\r\n}\r\n\r\nexport default useGetTopPoolsByApr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface TopFarmPoolProps {\r\n  title: string\r\n  percentage: number\r\n  index: number\r\n  visible: boolean\r\n}\r\n\r\nconst StyledWrapper = styled(Flex)<{ index: number }>`\r\n  position: relative;\r\n`\r\n\r\nconst AbsoluteWrapper = styled(Flex)<{ visible: boolean; index: number; topOffset: string }>`\r\n  position: absolute;\r\n  top: ${({ topOffset }) => topOffset};\r\n  opacity: ${({ visible }) => (visible ? 1 : 0)};\r\n  margin-top: ${({ visible }) => (visible ? 0 : `50%`)};\r\n  transition: opacity, margin-top, 0.4s ease-out;\r\n  flex-direction: column;\r\n\r\n  ${({ index, theme }) =>\r\n    index > 0\r\n      ? `\r\n         ${theme.mediaQueries.sm} {\r\n           height: 80px;\r\n           top: 0;\r\n           padding-left: 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `padding-right: 16px;`}\r\n`\r\n\r\nconst TopFarmPool: React.FC<TopFarmPoolProps> = ({ title, percentage, index, visible }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const topOffset = () => {\r\n    if (index >= 0 && index < 2) {\r\n      return '0px'\r\n    }\r\n\r\n    if (index >= 2 && index < 3) {\r\n      return '80px'\r\n    }\r\n\r\n    return '160px'\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper index={index}>\r\n      <AbsoluteWrapper index={index} visible={visible} topOffset={topOffset()}>\r\n        {title ? (\r\n          <Text bold mb=\"8px\" fontSize=\"12px\" color=\"secondary\">\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          <Skeleton width={80} height={12} mb=\"8px\" />\r\n        )}\r\n        {percentage ? (\r\n          <Balance lineHeight=\"1.1\" fontSize=\"16px\" bold unit=\"%\" value={percentage} />\r\n        ) : (\r\n          <Skeleton width={60} height={16} />\r\n        )}\r\n        {percentage ? (\r\n          <Text fontSize=\"16px\" color=\"textSubtle\">\r\n            {t('APR')}\r\n          </Text>\r\n        ) : (\r\n          <Skeleton width={30} height={16} mt=\"4px\" />\r\n        )}\r\n      </AbsoluteWrapper>\r\n    </StyledWrapper>\r\n  )\r\n}\r\n\r\nexport default TopFarmPool\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst RowHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n\r\n  return (\r\n    <Heading {...props}>\r\n      {firstWord}\r\n      <span style={{ color: theme.colors.secondary }}> {remainingWords}</span>\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default RowHeading\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Box, SwapVertIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport useGetTopFarmsByApr from 'views/Home/hooks/useGetTopFarmsByApr'\r\nimport useGetTopPoolsByApr from 'views/Home/hooks/useGetTopPoolsByApr'\r\nimport TopFarmPool from './TopFarmPool'\r\nimport RowHeading from './RowHeading'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n    grid-template-columns: repeat(5, auto);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n  }\r\n`\r\n\r\nconst FarmsPoolsRow = () => {\r\n  const [showFarms, setShowFarms] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const { topFarms } = useGetTopFarmsByApr(isIntersecting)\r\n  const { topPools } = useGetTopPoolsByApr(isIntersecting)\r\n\r\n  const timer = useRef<ReturnType<typeof setTimeout>>(null)\r\n  const isLoaded = topFarms[0] && topPools[0]\r\n\r\n  const startTimer = useCallback(() => {\r\n    timer.current = setInterval(() => {\r\n      setShowFarms((prev) => !prev)\r\n    }, 6000)\r\n  }, [timer])\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      startTimer()\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer.current)\r\n    }\r\n  }, [timer, isLoaded, startTimer])\r\n\r\n  const getPoolText = (pool: DeserializedPool) => {\r\n    if (pool.isAutoVault) {\r\n      return t('Auto CAKE')\r\n    }\r\n\r\n    if (pool.sousId === 0) {\r\n      return t('Manual CAKE')\r\n    }\r\n\r\n    return t('Stake %stakingSymbol% - Earn %earningSymbol%', {\r\n      earningSymbol: pool.earningToken.symbol,\r\n      stakingSymbol: pool.stakingToken.symbol,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div ref={observerRef}>\r\n      <Flex flexDirection=\"column\" mt=\"24px\">\r\n        <Flex mb=\"24px\">\r\n          <RowHeading text={showFarms ? t('Top Farms') : t('Top Syrup Pools')} />\r\n          <IconButton\r\n            variant=\"text\"\r\n            height=\"100%\"\r\n            width=\"auto\"\r\n            onClick={() => {\r\n              setShowFarms((prev) => !prev)\r\n              clearInterval(timer.current)\r\n              startTimer()\r\n            }}\r\n          >\r\n            <SwapVertIcon height=\"24px\" width=\"24px\" color=\"textSubtle\" />\r\n          </IconButton>\r\n        </Flex>\r\n        <Box height={['240px', null, '80px']}>\r\n          <Grid>\r\n            {topFarms.map((topFarm, index) => (\r\n              <TopFarmPool\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                key={index}\r\n                title={topFarm?.lpSymbol}\r\n                percentage={topFarm?.apr + topFarm?.lpRewardsApr}\r\n                index={index}\r\n                visible={showFarms}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <Grid>\r\n            {topPools.map((topPool, index) => (\r\n              <TopFarmPool\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                key={index}\r\n                title={topPool && getPoolText(topPool)}\r\n                percentage={topPool?.apr}\r\n                index={index}\r\n                visible={!showFarms}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Flex>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmsPoolsRow\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst SunburstSvg: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1956 1956\" {...props}>\r\n      <g filter=\"url(#filter0_f)\">\r\n        <path\r\n          d=\"M978 20L987.526 796.229L1078.14 25.248L1006.47 798.221L1177.18 40.9346L1025.11 802.182L1274.04 66.8879L1043.23 808.07L1367.65 102.823L1060.64 815.819L1457 148.348L1077.14 825.345L1541.1 202.962L1092.55 836.544L1619.03 266.067L1106.71 849.292L1689.93 336.973L1119.46 863.451L1753.04 414.902L1130.65 878.865L1807.65 499L1140.18 895.365L1853.18 588.346L1147.93 912.77L1889.11 681.962L1153.82 930.89L1915.07 778.821L1157.78 949.526L1930.75 877.862L1159.77 968.474L1936 978L1159.77 987.526L1930.75 1078.14L1157.78 1006.47L1915.07 1177.18L1153.82 1025.11L1889.11 1274.04L1147.93 1043.23L1853.18 1367.65L1140.18 1060.64L1807.65 1457L1130.65 1077.14L1753.04 1541.1L1119.46 1092.55L1689.93 1619.03L1106.71 1106.71L1619.03 1689.93L1092.55 1119.46L1541.1 1753.04L1077.14 1130.65L1457 1807.65L1060.64 1140.18L1367.65 1853.18L1043.23 1147.93L1274.04 1889.11L1025.11 1153.82L1177.18 1915.07L1006.47 1157.78L1078.14 1930.75L987.526 1159.77L978 1936L968.474 1159.77L877.862 1930.75L949.526 1157.78L778.821 1915.07L930.89 1153.82L681.962 1889.11L912.77 1147.93L588.346 1853.18L895.365 1140.18L499 1807.65L878.865 1130.65L414.902 1753.04L863.451 1119.46L336.973 1689.93L849.292 1106.71L266.067 1619.03L836.544 1092.55L202.962 1541.1L825.345 1077.14L148.348 1457L815.819 1060.64L102.823 1367.65L808.07 1043.23L66.8879 1274.04L802.182 1025.11L40.9346 1177.18L798.221 1006.47L25.248 1078.14L796.229 987.526L20 978L796.229 968.474L25.248 877.862L798.221 949.526L40.9346 778.821L802.182 930.89L66.8879 681.962L808.07 912.77L102.823 588.346L815.819 895.365L148.348 499L825.345 878.865L202.962 414.902L836.544 863.451L266.067 336.973L849.292 849.292L336.973 266.067L863.451 836.544L414.902 202.962L878.865 825.345L499 148.348L895.365 815.819L588.346 102.823L912.77 808.07L681.962 66.8879L930.89 802.182L778.821 40.9346L949.526 798.221L877.862 25.248L968.474 796.229L978 20Z\"\r\n          fill=\"url(#paint0_radial)\"\r\n          fillOpacity=\"0.1\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id=\"filter0_f\"\r\n          x=\"0\"\r\n          y=\"0\"\r\n          width=\"1956\"\r\n          height=\"1956\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"10\" result=\"effect1_foregroundBlur\" />\r\n        </filter>\r\n        <radialGradient\r\n          id=\"paint0_radial\"\r\n          cx=\"0\"\r\n          cy=\"0\"\r\n          r=\"1\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          gradientTransform=\"translate(978 978) rotate(90) scale(958)\"\r\n        >\r\n          <stop offset=\"0.114547\" stopColor=\"white\" stopOpacity=\"0\" />\r\n          <stop offset=\"0.374975\" stopColor=\"white\" />\r\n          <stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\r\n        </radialGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default SunburstSvg\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport Container from 'components/Layout/Container'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport SunburstSvg from './SunburstSvg'\r\nimport CompositeImage from './CompositeImage'\r\n\r\nconst BgWrapper = styled.div`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst StyledSunburst = styled(SunburstSvg)`\r\n  height: 350%;\r\n  width: 350%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    height: 400%;\r\n    width: 400%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled(Flex)`\r\n  z-index: 1;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`\r\n\r\nconst FloatingPancakesWrapper = styled(Container)`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  visibility: hidden;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    visibility: visible;\r\n  }\r\n`\r\n\r\nconst TopLeftImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n`\r\n\r\nconst BottomRightImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n`\r\n\r\nconst topLeftImage = {\r\n  path: '/images/home/flying-pancakes/',\r\n  attributes: [\r\n    { src: '1-bottom', alt: 'Pancake flying on the bottom' },\r\n    { src: '1-left', alt: 'Pancake flying on the left' },\r\n    { src: '1-top', alt: 'Pancake flying on the top' },\r\n  ],\r\n}\r\n\r\nconst bottomRightImage = {\r\n  path: '/images/home/flying-pancakes/',\r\n  attributes: [\r\n    { src: '2-bottom', alt: 'Pancake flying on the bottom' },\r\n    { src: '2-top', alt: 'Pancake flying on the top' },\r\n    { src: '2-right', alt: 'Pancake flying on the right' },\r\n  ],\r\n}\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\" height=\"100%\">\r\n          <StyledSunburst />\r\n        </Flex>\r\n      </BgWrapper>\r\n      <FloatingPancakesWrapper>\r\n        <TopLeftImgWrapper>\r\n          <CompositeImage {...topLeftImage} maxHeight=\"256px\" />\r\n        </TopLeftImgWrapper>\r\n        <BottomRightImgWrapper>\r\n          <CompositeImage {...bottomRightImage} maxHeight=\"256px\" />\r\n        </BottomRightImgWrapper>\r\n      </FloatingPancakesWrapper>\r\n      <Wrapper>\r\n        <Heading mb=\"24px\" scale=\"xl\" color=\"white\">\r\n          {t('Start in seconds.')}\r\n        </Heading>\r\n        <Text textAlign=\"center\" color=\"white\">\r\n          {t('Connect your crypto wallet to start using the app in seconds.')}\r\n        </Text>\r\n        <Text mb=\"24px\" bold color=\"white\">\r\n          {t('No registration needed.')}\r\n        </Text>\r\n\r\n        <Link external href=\"https://docs.pancakeswap.finance/\">\r\n          {t('Learn how to start')}\r\n        </Link>\r\n        {!account && <ConnectWalletButton mt=\"24px\" />}\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 14.5\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(tokens.cake.address))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const mcap = cakePriceBusd.times(cakeSupply)\r\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\r\n\r\n  return (\r\n    <Grid>\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Burned to date')}</Text>\r\n        {burnedBalance ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={burnedBalance} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn noMobileBorder>\r\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\r\n\r\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\r\n      </StyledColumn>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const OuterWedgeWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  right: 0px;\r\n  top: 0px;\r\n`\r\n\r\nexport const InnerWedgeWrapper = styled.div<{ fill: string; top?: boolean; width?: string }>`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 100%;\r\n  ${({ top }) => (top ? 'top: 0px' : 'bottom: 0px')};\r\n\r\n  svg {\r\n    fill: ${({ fill }) => fill};\r\n    width: ${({ width }) => width || '100%'};\r\n    height: 100%;\r\n    max-height: 48px;\r\n  }\r\n`\r\n\r\nexport const WedgeTopLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 48C1139.02 46.1887 336.256 15.2453 0 0H1660V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeTopRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M-346 48C174.985 46.1887 977.744 15.2453 1314 0H-346V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M0 0C520.985 1.81132 1323.74 32.7547 1660 48H0V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 0C1139.02 1.81132 336.256 32.7547 0 48H1660V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { SerializedFarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nexport interface FarmWithBalance extends SerializedFarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\r\n  const [earningsSum, setEarningsSum] = useState<number>(null)\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingCake',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\r\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\r\n        const earningNumber = new BigNumber(earning.balance)\r\n        if (earningNumber.eq(0)) {\r\n          return accum\r\n        }\r\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n      }, 0)\r\n\r\n      setFarmsWithStakedBalance(farmsWithBalances)\r\n      setEarningsSum(totalEarned)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return { farmsWithStakedBalance, earningsSum }\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport Balance from 'components/Balance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getEarningsText } from './EarningsText'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  height: fit-content;\r\n`\r\n\r\nconst HarvestCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n\r\n  const masterChefContract = useMasterchef()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\r\n  const numTotalToCollect = farmsWithStakedBalance.length\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\r\n\r\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\r\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardBody>\r\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\r\n            {preText && (\r\n              <Text mb=\"4px\" color=\"textSubtle\">\r\n                {preText}\r\n              </Text>\r\n            )}\r\n            {!earningsBusd.isNaN() ? (\r\n              <Balance\r\n                decimals={earningsBusd.gt(0) ? 2 : 0}\r\n                fontSize=\"24px\"\r\n                bold\r\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\r\n                lineHeight=\"1.1\"\r\n                value={earningsBusd.toNumber()}\r\n              />\r\n            ) : (\r\n              <Skeleton width={96} height={24} my=\"2px\" />\r\n            )}\r\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\r\n              {toCollectText}\r\n            </Text>\r\n          </Flex>\r\n          {numTotalToCollect <= 0 ? (\r\n            <Link to=\"farms\">\r\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\r\n                <Text color=\"primary\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ArrowForwardIcon ml=\"4px\" color=\"primary\" />\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              width={['100%', null, null, 'auto']}\r\n              id=\"harvest-all\"\r\n              isLoading={pendingTx}\r\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n              disabled={pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              <Text color=\"invertedContrast\" bold>\r\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\r\n              </Text>\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default HarvestCard\r\n","import { ContextApi } from 'contexts/Localization/types'\nimport BigNumber from 'bignumber.js'\n\nexport const getEarningsText = (\n  numFarmsToCollect: number,\n  hasCakePoolToCollect: boolean,\n  earningsBusd: BigNumber,\n  t: ContextApi['t'],\n): string => {\n  const data = {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect,\n  }\n\n  let earningsText = t('%earningsBusd% to collect', data)\n\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\n    if (numFarmsToCollect > 1) {\n      earningsText = t('%earningsBusd% to collect from %count% farms and CAKE pool', data)\n    } else {\n      earningsText = t('%earningsBusd% to collect from %count% farm and CAKE pool', data)\n    }\n  } else if (numFarmsToCollect > 0) {\n    if (numFarmsToCollect > 1) {\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\n    } else {\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\n    }\n  } else if (hasCakePoolToCollect) {\n    earningsText = t('%earningsBusd% to collect from CAKE pool', data)\n  }\n\n  return earningsText\n}\n","import React from 'react'\r\nimport { NoProfileAvatarIcon, Flex, Heading, Skeleton, Text, Box } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\nconst Desktop = styled(Flex)`\r\n  align-items: center;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Mobile = styled(Flex)`\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Sticker = styled(Flex)`\r\n  height: 92px;\r\n  width: 92px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\r\n`\r\n\r\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst UserDetail = () => {\r\n  const { profile, isLoading } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const truncatedAddress = truncateHash(account)\r\n\r\n  const getDesktopHeading = () => {\r\n    if (profile) {\r\n      return <Heading scale=\"xl\">{t('Hi, %userName%!', { userName: profile.username })}</Heading>\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={200} height={40} my=\"4px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  const getMobileHeading = () => {\r\n    if (profile) {\r\n      return (\r\n        <Heading mb=\"18px\" textAlign=\"center\">\r\n          {t('Hi, %userName%!', { userName: profile.username })}\r\n        </Heading>\r\n      )\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={120} height={20} mt=\"2px\" mb=\"18px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Desktop>\r\n        <Box mr=\"24px\">\r\n          <Sticker>{profile ? <ProfileAvatarWithTeam profile={profile} /> : <StyledNoProfileAvatarIcon />}</Sticker>\r\n        </Box>\r\n        <Flex flexDirection=\"column\">\r\n          {getDesktopHeading()}\r\n          {isLoading || !account ? (\r\n            <Skeleton width={160} height={16} my=\"4px\" />\r\n          ) : (\r\n            <Text fontSize=\"16px\"> {t('Connected with %address%', { address: truncatedAddress })}</Text>\r\n          )}\r\n        </Flex>\r\n      </Desktop>\r\n      <Mobile>{getMobileHeading()}</Mobile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDetail\r\n","import React from 'react'\r\nimport { Box, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport HarvestCard from './HarvestCard'\r\nimport UserDetail from './UserDetail'\r\n\r\nconst StyledCard = styled(Box)`\r\n  border-bottom: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-left: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-right: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-radius: ${({ theme }) => `0 0 ${theme.radii.card} ${theme.radii.card}`};\r\n  background: ${({ theme }) =>\r\n    theme.isDark\r\n      ? 'linear-gradient(360deg, rgba(49, 61, 92, 0.9) 0%, rgba(61, 42, 84, 0.9) 100%)'\r\n      : 'linear-gradient(180deg, rgba(202, 194, 236, 0.9) 0%,  rgba(204, 220, 239, 0.9) 51.04%, rgba(206, 236, 243, 0.9) 100%)'};\r\n`\r\n\r\nconst UserBanner = () => {\r\n  return (\r\n    <StyledCard p={['16px', null, null, '24px']}>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection={['column', null, null, 'row']}>\r\n        <Flex flex=\"1\" mr={[null, null, null, '32px']}>\r\n          <UserDetail />\r\n        </Flex>\r\n        <Flex flex=\"1\" width={['100%', null, 'auto']}>\r\n          <HarvestCard />\r\n        </Flex>\r\n      </Flex>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default UserBanner\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport Hero from './components/Hero'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport WinSection from './components/WinSection'\r\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\r\nimport Footer from './components/Footer'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\nimport UserBanner from './components/UserBanner'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledHeroSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'radial-gradient(103.12% 50% at 50% 50%, #21193A 0%, #191326 100%)'\r\n            : 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {account && (\r\n          <UserBannerWrapper>\r\n            <UserBanner />\r\n          </UserBannerWrapper>\r\n        )}\r\n        <Hero />\r\n      </StyledHeroSection>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #09070C 22%, #201335 100%)'\r\n            : 'linear-gradient(180deg, #FFFFFF 22%, #D7CAEC 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MetricsSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#201335' : '#D8CBED'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...earnSectionData} />\r\n        <FarmsPoolsRow />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #6FB6F1 0%, #EAF2F6 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <WinSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background=\"linear-gradient(180deg, #7645D9 0%, #5121B1 100%)\"\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n"],"sourceRoot":""}