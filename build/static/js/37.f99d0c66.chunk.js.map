{"version":3,"sources":["components/HashRoute.tsx","views/Nft/market/Collection/index.tsx"],"names":["HashRoute","Component","component","hash","routeProps","location","props","React","memo","Items","lazy","Traits","IndividualNFTPageRouter","Collection","path","useRouteMatch","collectionAddress","useParams","collection","useGetCollection","useFetchCollection","exact","PageLoader"],"mappings":"6NAGMA,EAAY,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,KAASC,EAAlC,wBAChB,cAAC,IAAD,2BAAWA,GAAX,IAAuBF,UAAW,gBAAGG,EAAH,EAAGA,SAAaC,EAAhB,wBAA4BD,EAASF,OAASA,GAAQ,cAACF,EAAD,eAAeK,SAG1FC,MAAMC,KAAKR,G,kBCDpBS,EAAQC,gBAAK,kBAAM,yDACnBC,EAASD,gBAAK,kBAAM,kCACpBE,EAA0BF,gBAAK,kBAAM,uEAyB5BG,UAvBI,WACjB,IAAQC,EAASC,cAATD,KACAE,EAAsBC,cAAtBD,kBACFE,EAAaC,YAAiBH,GAIpC,OAFAI,YAAmBJ,GAEdE,EAKH,qCACE,cAAC,EAAD,CAAWG,OAAK,EAACP,KAAMA,EAAMX,KAAK,GAAGD,UAAWO,IAChD,cAAC,EAAD,CAAWY,OAAK,EAACP,KAAMA,EAAMX,KAAK,SAASD,UAAWO,IACtD,cAAC,EAAD,CAAWY,OAAK,EAACP,KAAMA,EAAMX,KAAK,UAAUD,UAAWS,IACvD,cAAC,IAAD,CAAOG,KAAI,UAAKA,EAAL,aAAX,SACE,cAACF,EAAD,SATG,cAACU,EAAA,EAAD","file":"static/js/37.f99d0c66.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router'\r\n\r\nconst HashRoute = ({ component: Component, hash, ...routeProps }) => (\r\n  <Route {...routeProps} component={({ location, ...props }) => location.hash === hash && <Component {...props} />} />\r\n)\r\n\r\nexport default React.memo(HashRoute)\r\n","import HashRoute from 'components/HashRoute'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport React, { lazy } from 'react'\r\nimport { Route, useParams, useRouteMatch } from 'react-router'\r\nimport { useFetchCollection, useGetCollection } from 'state/nftMarket/hooks'\r\n\r\nconst Items = lazy(() => import('./Items'))\r\nconst Traits = lazy(() => import('./Traits'))\r\nconst IndividualNFTPageRouter = lazy(() => import('./IndividualNFTPage'))\r\n\r\nconst Collection = () => {\r\n  const { path } = useRouteMatch()\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const collection = useGetCollection(collectionAddress)\r\n\r\n  useFetchCollection(collectionAddress)\r\n\r\n  if (!collection) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HashRoute exact path={path} hash=\"\" component={Items} />\r\n      <HashRoute exact path={path} hash=\"#items\" component={Items} />\r\n      <HashRoute exact path={path} hash=\"#traits\" component={Traits} />\r\n      <Route path={`${path}/:tokenId`}>\r\n        <IndividualNFTPageRouter />\r\n      </Route>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collection\r\n"],"sourceRoot":""}